on:
  workflow_call:
    inputs:
      webhookUri:
        required: false
        type: string
      triggerWebhook:
        required: false
        type: boolean
        default: true
    secrets:
      KUBEWEBHOOK_TOKEN:
        required: true

jobs:
  deploy:
    name: üê≥ Deploy Review on Kubernetes
    runs-on: ubuntu-latest
    environment: review-auto
    outputs:
      manifests-images: ${{ steps.deployment-ending.outputs.manifests-images }}
    steps:
      - uses: socialgouv/workflows/actions/deployment-starting@v1
        id: deployment-starting
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat: ${{ secrets.SOCIALGROOVYBOT_BOTO_PAT }}
          environment-scope: review

      - uses: socialgouv/kontinuous/.github/actions/deploy-via-webhook@v1
        id: deployment
        continue-on-error: true
        with:
          webhookToken: ${{ secrets.KUBEWEBHOOK_TOKEN }}
          webhookUri: ${{ inputs.webhookUri }}
          triggerWebhook: ${{ inputs.triggerWebhook }}
          environment: dev
          deployWriteOutputFile: "true"
          projectName: ${{ vars.projectName }}

      - uses: socialgouv/workflows/actions/deployment-ending@v1
        id: deployment-ending
        with:
          pat: ${{ secrets.SOCIALGROOVYBOT_BOTO_PAT }}
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.deployment-starting.outputs.deployment-id }}
          deployment-name: ${{ steps.deployment-starting.outputs.deployment-name }}
          deployment-ok: ${{ steps.deployment.outcome == 'success' && 'true' || 'false' }}

  trivy:
    name: üïµÔ∏è Trivy vulnerability scanner
    needs: [deploy]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        imageRef: ${{ fromJson(needs.deploy.outputs.manifests-images) }}
    steps:
      - uses: socialgouv/workflows/actions/trivy-scan-image@v1
        with:
          image: ${{ matrix.imageRef }}
          token: ${{ secrets.GITHUB_TOKEN }}
