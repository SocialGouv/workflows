on:
  workflow_call:
    inputs:
      webhookUri:
        required: false
        type: string
      triggerWebhook:
        required: false
        type: boolean
        default: true
    secrets:
      KUBEWEBHOOK_TOKEN:
        required: true

permissions:
  id-token: write  # Required for OIDC token generation

jobs:
  deploy:
    name: üê≥ Deploy Production on Kubernetes
    runs-on: ubuntu-latest
    environment: production
    outputs:
      manifests-images: ${{ steps.deployment-ending.outputs.manifests-images }}
    steps:
      - name: Get GitHub App Token
        id: token
        uses: SocialGouv/token-bureau@main
        with:
          token-bureau-url: https://token-bureau.fabrique.social.gouv.fr
          audience: socialgouv

      - uses: socialgouv/workflows/actions/deployment-starting@v1
        id: deployment-starting
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat: ${{ steps.token.outputs.token }}
          environment-scope: production

      - uses: socialgouv/kontinuous/.github/actions/deploy-via-webhook@v1
        id: deployment
        continue-on-error: true
        with:
          webhookToken: ${{ secrets.KUBEWEBHOOK_TOKEN }}
          webhookUri: ${{ inputs.webhookUri }}
          triggerWebhook: ${{ inputs.triggerWebhook }}
          environment: prod
          deployWriteOutputFile: "true"
          projectName: ${{ vars.KS_PROJECT_NAME }}
          ciNamespace: ${{ vars.KS_CI_NAMESPACE }}

      - uses: socialgouv/workflows/actions/deployment-ending@v1
        id: deployment-ending
        with:
          pat: ${{ steps.token.outputs.token }}
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.deployment-starting.outputs.deployment-id }}
          deployment-name:
            ${{ steps.deployment-starting.outputs.deployment-name }}
          deployment-ok:
            ${{ steps.deployment.outcome == 'success' && 'true' || 'false' }}
