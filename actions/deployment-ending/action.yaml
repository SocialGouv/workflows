name: "Ending Deployment"
description: "Notify Github Ending Deployment"
inputs:
  token:
    description: "The Github authentication token"
    required: true
  deployment-id:
    description: "Deployment id"
    required: true
  deployment-name:
    description: "The deployment name"
    required: true
  deployment-ok:
    description: "Deployment status"
    required: true
  deployment-url:
    description: "The deployment url"
    required: false
  manifests-path:
    description: "The manifests.yaml file path"
    required: false
    default: "manifests.yaml"

outputs:
  url:
    description: "Main deployment URL"
    value: ${{ steps.environment-url.outputs.url }}

runs:
  using: "composite"
  steps:
    - uses: socialgouv/workflows/actions/debug-manifests@v1
      id: debug-manifests
      with:
        token: ${{ inputs.token }}
        path: ${{ inputs.manifests-path }}
        name: "manifests-${{ inputs.deployment-name }}.yaml"

    - uses: jwalton/gh-find-current-pr@v1
      id: finder

    - name: ‚õë Comment PR
      if: ${{ inputs.deployment-ok == 'true' }}
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        number: ${{ steps.finder.outputs.pr }}
        recreate: true
        message: |
          üéâ Deployment for commit ${{ github.sha }} :
          ${{ fromJSON(steps.debug-manifests.outputs.markdown-json).result }}
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Define environment URL
      id: environment-url
      shell: bash
      env:
        MANIFESTS_PATH: ${{ inputs.manifests-path }}
      run: |
        URL="${{ inputs.deployment-url }}"
        if [ "$URL" = "" ]; then
          HOSTS=$(cat "$MANIFESTS_PATH" | yq eval-all '.spec.rules[] .host')
          HOST=$(echo "$HOSTS" | head -n 1)
          URL="https://$HOST"
        fi
        echo "url=$URL">>$GITHUB_OUTPUT
        
    - name: Notify deployment end
      uses: bobheadxi/deployments@v1
      if: ${{ inputs.deployment-ok == 'true' }}
      with:
        step: finish
        status: ${{ job.status }}
        token: ${{ inputs.token }}
        env_url: ${{ steps.environment-url.outputs.url }}
        env: ${{ inputs.deployment-name }}
        deployment_id: ${{ inputs.deployment-id }}
    
    - name: Notify Final Status
      shell: bash
      env:
        DEPLOYMENT_OK: ${{ inputs.deployment-ok }}
      run: |
        if [ "$DEPLOYMENT_OK" = "true" ]; then
          exit 0
        fi
        
        echo "Pipeline failed ‚ùå"
          
        KS_DEPLOY_WRITE_OUTPUT_FILE=${KS_DEPLOY_WRITE_OUTPUT_FILE:-"kontinuous-deployment-output.log"}
        if [ ! -f "$KS_DEPLOY_WRITE_OUTPUT_FILE" ]; then
          echo 'see previous steps to inspect full logs'
          exit 1
        fi

        cat $KS_DEPLOY_WRITE_OUTPUT_FILE
        exit 1